@page "/docker"
@using global::Docker.DotNet.Models
@using Constants = Jx.Gateway.Utils.Constants
@using Jx.Gateway.Enums
@using Jx.Gateway.Services
@inject DockerService DockerService

<PageTitle>Docker管理</PageTitle>

<Table TItem="ContainerListResponse" Items="items" ShowToolbar="true" ShowExtendButtons="true" IsBordered="true" IsStriped="true" ShowDefaultButtons="false" 
       @bind-SelectedRows="SelectedRows"
       IsMultipleSelect="true" IsPagination="true" PageItemsSource="new []{10, 20, 50}" 
       ShowEditButtonCallback="e => false" ShowDeleteButtonCallback="e => false">
    <TableColumns>
        <TableColumn @bind-Field="@context.Names" Text="容器名">
            <Template Context="value">
                @foreach (string name in value.Value)
                {
                    <div>@name.Trim('/')</div>
                }
            </Template>
        </TableColumn>
        <TableColumn @bind-Field="@context.State" Text="状态" Width="80">
            <Template Context="value">
                <Tag>@(Constants.GetChineseState(value.Value)?? value.Value)</Tag>
            </Template>
        </TableColumn>
        <TableColumn @bind-Field="@context.Image" Text="镜像"></TableColumn>
        <TableColumn @bind-Field="@context.Created" Text="创建时间" FormatString="yyyy-MM-dd HH:mm:ss"></TableColumn>
        <TableColumn @bind-Field="@context.NetworkSettings" Text="IP地址">
            <Template Context="value">
                @foreach(var network in value.Value.Networks.Values)
                {
                    <div>@network.IPAddress</div>
                }
            </Template>
        </TableColumn>
    </TableColumns>
    <TableToolbarTemplate>
        <TableToolbarButton Icon="fas fa-play" Text="启动容器" IsDisabled="@(SelectedRows.Count != 1 || SelectedRows[0].State == DockerState.running.ToString())"></TableToolbarButton>
        <TableToolbarButton Icon="fas fa-stop" Text="停止容器" IsDisabled="@(SelectedRows.Count != 1 || SelectedRows[0].State != DockerState.running.ToString())"></TableToolbarButton>
        <TableToolbarButton Icon="fas fa-pause" Text="暂停容器" IsDisabled="@(SelectedRows.Count != 1 || SelectedRows[0].State != DockerState.running.ToString())"></TableToolbarButton>
    </TableToolbarTemplate>
    <RowButtonTemplate>
        <TableCellButton Color="Color.None" Icon="fa-solid fa-file-lines" TooltipText="日志"></TableCellButton>
        <TableCellButton Color="Color.None" Icon="fa-solid fa-circle-info" TooltipText="详情"></TableCellButton>
        <TableCellButton Color="Color.None" Icon="fa-solid fa-chart-area" TooltipText="状态"></TableCellButton>
        <TableCellButton Color="Color.None" Icon="fa-solid fa-terminal" TooltipText="终端"></TableCellButton>
    </RowButtonTemplate>
</Table>

@code {
    private IList<ContainerListResponse>? items;

    private List<ContainerListResponse> SelectedRows { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        items = await DockerService.GetContainers();

    }

}